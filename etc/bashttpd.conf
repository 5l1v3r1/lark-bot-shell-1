#!/bin/bash

source ${ROOT}/lib/libcommon

function get_chat_resp_json {
  query=$1
  curl -G http://api.qingyunke.com/api.php \
    --data-urlencode 'key=free' \
    --data-urlencode 'appid=0' \
    --data-urlencode 'msg='"${query}" 2>/dev/null
}

function get_chat_resp {
  query=$1
  get_chat_resp_json "${query}" | json_parse '"content"' | remove_unused
}

function on_challenge {
  # Open API challenge
  challenge=$(
    json_parse '"challenge"' <<<\
    ${POST_VALUES} |\
    remove_unused
  )
  if [ "${challenge}" != "" ];
  then
    send_response_ok_exit <<< '{"challenge":"'${challenge}'"}'
    return
  fi
  # Deal with message
  event_type=$(
    json_parse '"event","type"' <<<\
    ${POST_VALUES} |\
    remove_unused
  )
  if [ "${event_type}" == "message" ];
  then
    open_chat_id=$(
      json_parse '"event","open_chat_id"' <<<\
      ${POST_VALUES} |\
      remove_unused
    )
    user_open_id=$(
      json_parse '"event","user_open_id"' <<<\
      ${POST_VALUES} |\
      remove_unused
    )
    text_without_at_bot=$(
      json_parse '"event","text_without_at_bot"' <<<\
      ${POST_VALUES} |\
      remove_unused
    )
    resp=$(get_chat_resp "${text_without_at_bot}")
    send_text_message 'open_chat_id' ${open_chat_id} "$(add_unused '<at user_id="'${user_open_id}'">test</at> '${resp})"
  fi
  # Response
  send_response_ok_exit <<< ''
}


# Router rules
on_uri_match '/challenge' on_challenge
unconditionally serve_static_string 'Hello, Silly B.'
